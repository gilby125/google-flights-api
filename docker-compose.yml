services:
  api:
    build: .
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.flights.local`)"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.email=${ACME_EMAIL:-admin@throughfire.net}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - backend

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=flights
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=flights
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    volumes:
      - redisdata:/data
    networks:
      - backend

volumes:
  pgdata:
  redisdata:

networks:
  backend:
    driver: bridge
